<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>pro.horoshilov</groupId>
    <artifactId>family</artifactId>
    <version>0.1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <encoding>UTF-8</encoding>
        <scala.version>2.13.1</scala.version>
        <scala.compat.version>2.13</scala.compat.version>
        <!-- Project properties -->
        <akka.version>2.5.26</akka.version>
        <akka.http.version>10.1.11</akka.http.version>
        <semanticdb.version>4.3.0</semanticdb.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>

        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-actor_${scala.compat.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>
        <!-- Explicitly depend on akka-streams in same version as akka-actor-->
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-stream_${scala.compat.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-http_${scala.compat.version}</artifactId>
            <version>${akka.http.version}</version>
        </dependency>
        <!-- If testkit used, explicitly declare dependency on akka-streams-testkit in same version as akka-actor-->
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-http-testkit_${scala.compat.version}</artifactId>
            <version>${akka.http.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-stream-testkit_${scala.compat.version}</artifactId>
            <version>${akka.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>src/main/scala</sourceDirectory>
        <testSourceDirectory>src/test/scala</testSourceDirectory>

        <plugins>
            <plugin>
                <groupId>io.github.evis</groupId>
                <artifactId>scalafix-maven-plugin</artifactId>
                <version>0.1.2_0.9.5</version>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>4.3.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <args>
                        <arg>-Ywarn-unused</arg> <!-- if you need exactly RemoveUnused -->
                    </args>
                    <scalaVersion>${scala.version}</scalaVersion>
                    <compilerPlugins>
                        <compilerPlugin>
                            <groupId>org.scalameta</groupId>
                            <artifactId>semanticdb-scalac_2.13.1</artifactId>
                            <version>4.3.0</version>
                        </compilerPlugin>
                    </compilerPlugins>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <mainClass>pro.horoshilov.family.App</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>6.0.3</version>
                <configuration>
                    <driver>org.postgresql.Driver</driver>
                    <url>jdbc:postgresql://localhost:5432/family</url>
                    <user>postgres</user>
                    <password>postgres</password>
                    <schemas>
                        <schema>public</schema>
                    </schemas>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.antipathy</groupId>
                <artifactId>mvn-scalafmt_${scala.compat.version}</artifactId>
                <version>1.0.3</version>
                <configuration>
                    <configLocation>${project.basedir}/.scalafmt.conf</configLocation> <!-- path to config -->
                    <skipTestSources>false</skipTestSources> <!-- (Optional) skip formatting test sources -->
                    <skipSources>false</skipSources> <!-- (Optional) skip formatting main sources -->
                    <respectVersion>false</respectVersion> <!-- (Optional) fail if no version set in scalafmt.conf -->
                    <sourceDirectories> <!-- (Optional) Paths to source-directories. Overrides ${project.build.sourceDirectory} -->
                        <param>${project.basedir}/src/main/scala</param>
                    </sourceDirectories>
                    <testSourceDirectories> <!-- (Optional) Paths to test-source-directories. Overrides ${project.build.testSourceDirectory} -->
                        <param>${project.basedir}/src/test/scala</param>
                    </testSourceDirectories>
                    <validateOnly>false</validateOnly> <!-- check formatting without changing files -->
                    <onlyChangedFiles>true</onlyChangedFiles> <!-- only format (staged) files that have been changed from the specified git branch -->
                    <!-- <branch>master</branch> The git branch to check against -->
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>